buildscript {
	dependencies {
		classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')
	}
}

plugins {
	id 'org.springframework.boot' version '2.2.0.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
}

group = 'com.server'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
	jcenter()
}



dependencies {
	compile 'org.twitter4j:twitter4j-core:4.0.7'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compile("org.springframework.boot:spring-boot-devtools")
	implementation("org.springframework.boot:spring-boot-devtools")
	implementation("postgresql:postgresql:9.1-901-1.jdbc4")
	testCompile 'com.jayway.jsonpath:json-path'
	compile "io.springfox:springfox-swagger2:2.9.2"
	compile "io.springfox:springfox-swagger-ui:2.9.2"
	compile "org.json:json:20171018"
	compile "com.googlecode.json-simple:json-simple:1.1"
	compile 'org.apache.httpcomponents:httpclient:4.5.11'
	compile 'org.apache.httpcomponents:httpmime:4.2.6'
	implementation 'com.google.code.gson:gson:2.8.6'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}

bootJar {
	mainClassName = 'com.server.Area.RestMain'
}

apply plugin: 'com.palantir.docker'

task unpack(type: Copy) {
	dependsOn bootJar
	from(zipTree(tasks.bootJar.outputs.files.singleFile))
	into("build/dependency")
}

docker {
	name "${project.group}/${bootJar.baseName}"
	copySpec.from(tasks.unpack.outputs).into("dependency")
	buildArgs(['DEPENDENCY': "dependency"])
}
